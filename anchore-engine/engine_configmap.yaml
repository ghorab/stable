# Source: anchore-engine/templates/engine_configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: anchore-engine-anchore-engine
  labels:
    app: anchore-engine-anchore-engine
    chart: anchore-engine-1.7.0
    release: anchore-engine
    heritage: Helm
data:
  config.yaml: |
    # Anchore Service Configuration File from ConfigMap
    service_dir: /anchore_service
    tmp_dir: /analysis_scratch
    log_level: INFO
    image_analyze_timeout_seconds: 36000
    cleanup_images: true
    allow_awsecr_iam_auto: false
    host_id: "${ANCHORE_POD_NAME}"
    internal_ssl_verify: false
    auto_restart_services: false

    global_client_connect_timeout: 0
    global_client_read_timeout: 0

    metrics:
      enabled: false
      auth_disabled: false
    
    # Configure what feeds to sync.
    # The sync will hit http://ancho.re/feeds, if any outbound firewall config needs to be set in your environment.
    feeds:
      sync_enabled: true
      selective_sync:
        # If enabled only sync specific feeds instead of all that are found.
        enabled: true
        feeds:
          github: true
          # Vulnerabilities feed is the feed for distro cve sources (redhat, debian, ubuntu, oracle, alpine....)
          vulnerabilities: true
          # NVD Data is used for non-distro CVEs (jars, npm, etc) that are not packaged and released by distros as rpms, debs, etc
          nvdv2: true
          # Warning: enabling the package sync causes the service to require much
          #   more memory to do process the significant data volume. We recommend at least 4GB available for the container
          packages: false
          # Enabling vulndb syncs vulndb vulnerability data from an on-premise anchore enterprise feeds service. Please contact
          # anchore support for finding out more about this service
          vulndb: false
          microsoft: false
          # Sync github data if available for GHSA matches
          github: true
      client_url: "https://ancho.re/v1/account/users"
      token_url: "https://ancho.re/oauth/token"
      anonymous_user_username: anon@ancho.re
      anonymous_user_password: pbiU2RYZ2XrmYQ
      connection_timeout_seconds: 3
      read_timeout_seconds: 180
    default_admin_password: ${ANCHORE_ADMIN_PASSWORD}
    default_admin_email: example@email.com

    # Locations for keys used for signing and encryption. Only one of 'secret' or 'public_key_path'/'private_key_path' needs to be set. If all are set then the keys take precedence over the secret value
    # Secret is for a shared secret and if set, all components in anchore should have the exact same value in their configs.
    keys:
      secret: 

    # Configuring supported user authentication and credential management
    user_authentication:
      oauth:
        enabled: false
        default_token_expiration_seconds: 3600

      # Set this to True to enable storing user passwords only as secure hashes in the db. This can dramatically increase CPU usage if you
      # don't also use oauth and tokens for internal communications (which requires keys/secret to be configured as well)
      # WARNING: you should not change this after a system has been initialized as it may cause a mismatch in existing passwords
      hashed_passwords: false

    credentials:
      database:
        db_connect: "postgresql://${ANCHORE_DB_USER}:${ANCHORE_DB_PASSWORD}@${ANCHORE_DB_HOST}/${ANCHORE_DB_NAME}"
        db_connect_args:
          timeout: 120
          ssl: false
        db_pool_size: 30
        db_pool_max_overflow: 100
    services:
      apiext:
        enabled: true
        require_auth: true
        endpoint_hostname: anchore-engine-anchore-engine-api
        listen: 0.0.0.0
        port: 8228
      analyzer:
        enabled: true
        require_auth: true
        endpoint_hostname: anchore-engine-anchore-engine-analyzer
        listen: 0.0.0.0
        port: 8084
        cycle_timer_seconds: 1
        cycle_timers:
          image_analyzer: 5
        max_threads: 1
        analyzer_driver: 'nodocker'
        layer_cache_enable: false
        layer_cache_max_gigabytes: 0
      catalog:
        enabled: true
        require_auth: true
        endpoint_hostname: anchore-engine-anchore-engine-catalog
        listen: 0.0.0.0
        port: 8082
        cycle_timer_seconds: 1
        cycle_timers:
          # Interval to check for an update to a tag
          image_watcher: 3600
          # Interval to run a policy evaluation on images with the policy_eval subscription activated.
          policy_eval: 3600
          # Interval to run a vulnerability scan on images with the vuln_update subscription activated.
          vulnerability_scan: 14400
          # Interval at which the catalog looks for new work to put on the image analysis queue.
          analyzer_queue: 1
          # Interval notifications will be processed for state changes
          notifications: 30
          # Intervals service state updates are polled for the system status
          service_watcher: 15
          # Interval between checks to repo for new tags
          repo_watcher: 60
        event_log:
          notification:
            enabled: false
            level:
            - error
        archive:
          compression:
            enabled: true
            min_size_kbytes: 100
          storage_driver:
            config: {}
            name: db
      simplequeue:
        enabled: true
        require_auth: true
        endpoint_hostname: anchore-engine-anchore-engine-simplequeue
        listen: 0.0.0.0
        port: 8083
      policy_engine:
        enabled: true
        require_auth: true
        endpoint_hostname: anchore-engine-anchore-engine-policy
        listen: 0.0.0.0
        port: 8087
        cycle_timer_seconds: 1
        cycle_timers:
          feed_sync: 14400
          feed_sync_checker: 3600
---
