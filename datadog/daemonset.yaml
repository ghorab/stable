# Source: datadog/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datadog
  labels:
    helm.sh/chart: "datadog-2.3.42"
    app.kubernetes.io/name: "datadog"
    app.kubernetes.io/instance: "datadog"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "7"
spec:
  selector:
    matchLabels:
      app: datadog
  template:
    metadata:
      labels:
        app: datadog
      name: datadog
      annotations:
        checksum/autoconf-config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
        checksum/confd-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/checksd-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    spec:
      containers:
      - name: agent
        image: "datadog/agent:7.21.1"
        imagePullPolicy: IfNotPresent
        command: ["agent", "run"]
        resources:
          {}
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        env:
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "datadog"
                key: api-key
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBERNETES
            value: "yes"
          - name: DOCKER_HOST
            value: unix:///host/var/run/docker.sock
          - name: DD_LOG_LEVEL
            value: "INFO"
          - name: DD_DOGSTATSD_PORT
            value: "8125"
          - name: DD_APM_ENABLED
            value: "false"
          - name: DD_LOGS_ENABLED
            value: "false"
          - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            value: "false"
          - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
            value: "true"
          - name: DD_HEALTH_PORT
            value: "5555"
        volumeMounts:
          - name: config
            mountPath: /etc/datadog-agent
          - name: runtimesocketdir
            mountPath: /host/var/run
            readOnly: true
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5555
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
      - name: process-agent
        image: "datadog/agent:7.21.1"
        imagePullPolicy: IfNotPresent
        command: ["process-agent", "-config=/etc/datadog-agent/datadog.yaml"]
        resources:
          {}
        env:
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "datadog"
                key: api-key
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBERNETES
            value: "yes"
          - name: DOCKER_HOST
            value: unix:///host/var/run/docker.sock
          - name: DD_LOG_LEVEL
            value: "INFO"
        volumeMounts:
          - name: config
            mountPath: /etc/datadog-agent
          - name: runtimesocketdir
            mountPath: /host/var/run
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: passwd
            mountPath: /etc/passwd
          - name: procdir
            mountPath: /host/proc
            readOnly: true
      initContainers:
          
      - name: init-volume
        image: "datadog/agent:7.21.1"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
          - cp -r /etc/datadog-agent /opt
        volumeMounts:
          - name: config
            mountPath: /opt/datadog-agent
        resources:
          {}
      - name: init-config
        image: "datadog/agent:7.21.1"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
          - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash $script ; done
        volumeMounts:
          - name: config
            mountPath: /etc/datadog-agent
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: runtimesocketdir
            mountPath: /host/var/run
            readOnly: true
        env:
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "datadog"
                key: api-key
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: KUBERNETES
            value: "yes"
          - name: DOCKER_HOST
            value: unix:///host/var/run/docker.sock
        resources:
          {}
      volumes:
      - name: config
        emptyDir: {}
      - hostPath:
          path: /var/run
        name: runtimesocketdir
        
      - hostPath:
          path: /proc
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroups
      - name: s6-run
        emptyDir: {}
      - hostPath:
          path: /etc/passwd
        name: passwd
      tolerations:
      affinity:
        {}
      serviceAccountName: datadog
      nodeSelector:
        kubernetes.io/os: linux
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
---
