# Source: neo4j/templates/core-statefulset.yaml
apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  name: "neo4j-neo4j-core"
spec:
  podManagementPolicy: Parallel
  serviceName: neo4j-neo4j
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: "neo4j"
      app.kubernetes.io/name: neo4j
      app.kubernetes.io/component: core
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "neo4j"
        helm.sh/chart: "neo4j-3.0.1"
        app.kubernetes.io/name: neo4j
        app.kubernetes.io/component: core
    spec:
      containers:
      - name: neo4j-neo4j
        image: "neo4j:4.0.3-enterprise"
        imagePullPolicy: "IfNotPresent"
        # Most pod config is factored into a different configMap, which is user overrideable.
        envFrom:
          - configMapRef:
              name: neo4j-neo4j-core-config          
        env:
          - name: NEO4J_SECRETS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: neo4j-neo4j-secrets
                key: neo4j-password      
        command:
          - "/bin/bash"
          - "-c"
          - |
            # Making this host the default address, so that advertised addresses are over-rideable
            # by custom configmaps if specified.
            export HOST=$(hostname -f)
            export NEO4J_causal__clustering_discovery__advertised__address=${NEO4J_causal__clustering_discovery__advertised__address:-$HOST}
            export NEO4J_dbms_default__advertised__address=${NEO4J_dbms_default__advertised__address:-$HOST}
            export NEO4J_dbms_connector_bolt_advertised__address=${NEO4J_dbms_connector_bolt_advertised__address:-$HOST}
            export NEO4J_dbms_connector_http_advertised__address=${NEO4J_dbms_connector_http_advertised__address:-$HOST}
            export NEO4J_dbms_connector_https_advertised__address=${NEO4J_dbms_connector_https_advertised__address:-$HOST}
            
            # These settings are *not* overrideable, because they must match the initial_discovery_members
            # In the Neo4j node config, otherwise Neo4j's akka layer will reject connections.
            export NEO4J_causal__clustering_discovery__advertised__address=$(hostname -f):5000
            export NEO4J_causal__clustering_transaction__advertised__address=$(hostname -f):6000
            export NEO4J_causal__clustering_raft__advertised__address=$(hostname -f):7000

            if [ "${AUTH_ENABLED:-}" == "true" ]; then
              export NEO4J_AUTH="neo4j/${NEO4J_SECRETS_PASSWORD}"
            else
              export NEO4J_AUTH="none"
            fi

            echo "Starting Neo4j CORE on $HOST"
            exec /docker-entrypoint.sh "neo4j"
        ports:
        - containerPort: 5000
          name: discovery
        - containerPort: 7000
          name: raft
        - containerPort: 6000
          name: tx
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        volumeMounts:
        - name: datadir
          mountPath: "/data"
        - name: plugins
          mountPath: /plugins
        readinessProbe:
          tcpSocket:
            port: 7687
          initialDelaySeconds: 30
          periodSeconds: 3
        livenessProbe:
          initialDelaySeconds: 60
          tcpSocket:
            port: 7687
        resources:
          {}
      volumes:
        - name: plugins
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"
---
