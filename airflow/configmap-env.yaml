# Source: airflow/templates/config/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-env
  labels:
    app: airflow
    chart: airflow-7.13.3
    release: airflow
    heritage: Helm
data:
  ## Force UTC timezone
  TZ: Etc/UTC

  ## ----------------
  ## Database
  ## ----------------
  DATABASE_HOST: "airflow-postgresql"
  DATABASE_PORT: "5432"
  DATABASE_USER: "postgres"
  DATABASE_DB: "airflow"
  # bash command which echos the URL encoded value of $DATABASE_PASSWORD
  DATABASE_PASSWORD_CMD: |-
    echo ${DATABASE_PASSWORD} | python3 -c "import urllib.parse; encoded_pass = urllib.parse.quote(input()); print(encoded_pass)"
  # bash command which echos the DB connection string in SQLAlchemy format
  DATABASE_SQLALCHEMY_CMD: |-
    echo -n "postgresql+psycopg2://${DATABASE_USER}:$(eval $DATABASE_PASSWORD_CMD)@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB}"
  # bash command which echos the DB connection string in Celery result_backend format
  DATABASE_CELERY_CMD: |-
    echo -n "db+postgresql://${DATABASE_USER}:$(eval $DATABASE_PASSWORD_CMD)@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB}"
  ## ----------------
  ## Redis
  ## ----------------
  REDIS_HOST: "airflow-redis-master"
  REDIS_PORT: "6379"
  REDIS_DBNUM: "1"
  # a bash command which echos the URL encoded value of $REDIS_PASSWORD
  # NOTE: if $REDIS_PASSWORD is non-empty, prints `:${REDIS_PASSWORD}@`, else ``
  REDIS_PASSWORD_CMD: |-
    echo ${REDIS_PASSWORD} | python3 -c "import urllib.parse; encoded_pass = urllib.parse.quote(input()); print(f\":{encoded_pass}@\") if len(encoded_pass) > 0 else None"
  # a bash command which echos the Redis connection string
  REDIS_CONNECTION_CMD: |-
    echo -n "redis://$(eval $REDIS_PASSWORD_CMD)${REDIS_HOST}:${REDIS_PORT}/${REDIS_DBNUM}"

  ## ----------------
  ## Airflow
  ## ----------------
  AIRFLOW__CORE__BASE_LOG_FOLDER: "/opt/airflow/logs"
  AIRFLOW__CORE__DAGS_FOLDER: "/opt/airflow/dags"
  AIRFLOW__CORE__DAG_PROCESSOR_MANAGER_LOG_LOCATION: "/opt/airflow/logs/dag_processor_manager/dag_processor_manager.log"
  AIRFLOW__CORE__DONOT_PICKLE: "false"
  AIRFLOW__CORE__ENABLE_XCOM_PICKLING: "false" # for forward compatibility with 2.0
  AIRFLOW__CORE__EXECUTOR: "CeleryExecutor"
  AIRFLOW__CORE__FERNET_KEY: "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc="
  AIRFLOW__CORE__SQL_ALCHEMY_CONN_CMD: |-
    bash -c 'eval "$DATABASE_SQLALCHEMY_CMD"'
  AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY: "/opt/airflow/logs/scheduler"
  AIRFLOW__WEBSERVER__BASE_URL: "http://localhost:8080"
  AIRFLOW__WEBSERVER__WEB_SERVER_PORT: "8080"
  ## ----------------
  ## Airflow - CeleryExecutor
  ## ----------------
  AIRFLOW__CELERY__BROKER_URL_CMD: |-
    bash -c 'eval "$REDIS_CONNECTION_CMD"'
  AIRFLOW__CELERY__FLOWER_PORT: "5555"
  AIRFLOW__CELERY__FLOWER_URL_PREFIX: ""
  AIRFLOW__CELERY__RESULT_BACKEND_CMD: |-
    bash -c 'eval "$DATABASE_CELERY_CMD"'
  AIRFLOW__CELERY__WORKER_CONCURRENCY: "16"
  AIRFLOW__CELERY__WORKER_LOG_SERVER_PORT: "8793"
---
