# Source: ethereum/templates/geth-miner.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ethereum-geth-miner
  labels:
    app: ethereum
    chart: ethereum-1.0.2
    release: ethereum
    heritage: Helm
    component: geth-miner
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ethereum
      release: ethereum
      component: geth-miner
  template:
    metadata:
      labels:
        app: ethereum
        release: ethereum
        component: geth-miner
    spec:
      containers:
      - name: geth-miner
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth --bootnodes=`cat /root/.ethereum/bootnodes` --mine --etherbase=0 --networkid=${NETWORK_ID} --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC} --verbosity=5"
        env:
        - name: ETHSTATS_SVC
          value: ethereum-ethstats.default
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: ethereum-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: ethereum-geth-config
              key: networkid
        ports:
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      initContainers:
      - name: init-genesis
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        args:
        - "init"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: config
          mountPath: /var/geth
      - name: import-geth-account
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth account import --password /root/.ethereum/account/accountSecret /root/.ethereum/account/accountPrivateKey"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: account
          readOnly: true
          mountPath: /root/.ethereum/account
      - name: get-bootnodes
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - |-
          apk add --no-cache curl; 
          CNT=0;
          echo "retreiving bootnodes from $BOOTNODE_SVC"
          while [ $CNT -le 90 ] 
          do
            curl -m 5 -s $BOOTNODE_SVC | xargs echo -n >> /geth/bootnodes;
            if [ -s /geth/bootnodes ] 
            then
              cat /geth/bootnodes;
              exit 0;
            fi;
          
            echo "no bootnodes found. retrying $CNT..."; 
            sleep 2 || break;
            CNT=$((CNT+1));
          done;
          echo "WARNING. unable to find bootnodes. continuing but geth may not be able to find any peers.";
          exit 0;
        env:
        - name: BOOTNODE_SVC
          value: ethereum-bootnode.default
        volumeMounts:
        - name: data
          mountPath: /geth
      volumes:
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: ethereum-geth-config
      - name: account
        secret:
          secretName: ethereum-geth-account
---
