# Source: pgadmin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  labels:
    app.kubernetes.io/name: pgadmin
    helm.sh/chart: pgadmin-1.2.3
    app.kubernetes.io/instance: pgadmin
    app.kubernetes.io/version: "4.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pgadmin
      app.kubernetes.io/instance: pgadmin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgadmin
        app.kubernetes.io/instance: pgadmin
    spec:
      initContainers:
        - name: init-pgadmin
          image: "dpage/pgadmin4:4.18"
          imagePullPolicy: IfNotPresent
          command: ["/bin/chown", "-R", "5050:5050", "/var/lib/pgadmin"]
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          securityContext:
            runAsUser: 0
      containers:
        - name: pgadmin
          image: "dpage/pgadmin4:4.18"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          env:
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: !!string False
            - name: PGADMIN_DEFAULT_EMAIL
              value: chart@example.local
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin
                  key: password
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          resources:
            {}
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pgadmin
      securityContext:
        fsGroup: 5050
        runAsGroup: 5050
        runAsUser: 5050
---
